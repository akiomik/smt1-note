import java.text.Normalizer

val MAPPING = Map(
  0x00 -> '＿',
  0x01 -> '０',
  0x02 -> '１',
  0x03 -> '２',
  0x04 -> '３',
  0x05 -> '４',
  0x06 -> '５',
  0x07 -> '６',
  0x08 -> '７',
  0x09 -> '８',
  0x0A -> '９',
  0x0B -> 'Ａ',
  0x0C -> 'Ｂ',
  0x0D -> 'Ｃ',
  0x0E -> 'Ｄ',
  0x0F -> 'Ｅ',
  0x10 -> 'Ｆ',
  0x11 -> 'Ｇ',
  0x12 -> 'Ｈ',
  0x13 -> 'Ｉ',
  0x14 -> 'Ｊ',
  0x15 -> 'Ｋ',
  0x16 -> 'Ｌ',
  0x17 -> 'Ｍ',
  0x18 -> 'Ｎ',
  0x19 -> 'Ｏ',
  0x1A -> 'Ｐ',
  0x1B -> 'Ｑ',
  0x1C -> 'Ｒ',
  0x1D -> 'Ｓ',
  0x1E -> 'Ｔ',
  0x1F -> 'Ｕ',
  0x20 -> 'Ｖ',
  0x21 -> 'Ｗ',
  0x22 -> 'Ｘ',
  0x23 -> 'Ｙ',
  0x24 -> 'Ｚ',
  0x25 -> 'あ',
  0x26 -> 'い',
  0x27 -> 'う',
  0x28 -> 'え',
  0x29 -> 'お',
  0x2A -> 'か',
  0x2B -> 'き',
  0x2C -> 'く',
  0x2D -> 'け',
  0x2E -> 'こ',
  0x2F -> 'さ',
  0x30 -> 'し',
  0x31 -> 'す',
  0x32 -> 'せ',
  0x33 -> 'そ',
  0x34 -> 'た',
  0x35 -> 'ち',
  0x36 -> 'つ',
  0x37 -> 'て',
  0x38 -> 'と',
  0x39 -> 'な',
  0x3A -> 'に',
  0x3B -> 'ぬ',
  0x3C -> 'ね',
  0x3D -> 'の',
  0x3E -> 'は',
  0x3F -> 'ひ',
  0x40 -> 'ふ',
  0x41 -> 'へ',
  0x42 -> 'ほ',
  0x43 -> 'ま',
  0x44 -> 'み',
  0x45 -> 'む',
  0x46 -> 'め',
  0x47 -> 'も',
  0x48 -> 'や',
  0x49 -> 'ゆ',
  0x4A -> 'よ',
  0x4B -> 'ら',
  0x4C -> 'り',
  0x4D -> 'る',
  0x4E -> 'れ',
  0x4F -> 'ろ',
  0x50 -> 'わ',
  0x51 -> 'を',
  0x52 -> 'ん',
  0x53 -> 'ぁ',
  0x54 -> 'ぉ',
  0x55 -> 'ゃ',
  0x56 -> 'ゅ',
  0x57 -> 'ょ',
  0x58 -> 'っ',
  0x59 -> 'ぅ',
  0x5A -> 'ー',
  0x5B -> '￥',
  0x5C -> 'ｈ', // マッカ
  0x5D -> 'ア',
  0x5E -> 'イ',
  0x5F -> 'ウ',
  0x60 -> 'エ',
  0x61 -> 'オ',
  0x62 -> 'カ',
  0x63 -> 'キ',
  0x64 -> 'ク',
  0x65 -> 'ケ',
  0x66 -> 'コ',
  0x67 -> 'サ',
  0x68 -> 'シ',
  0x69 -> 'ス',
  0x6A -> 'セ',
  0x6B -> 'ソ',
  0x6C -> 'タ',
  0x6D -> 'チ',
  0x6E -> 'ツ',
  0x6F -> 'テ',
  0x70 -> 'ト',
  0x71 -> 'ナ',
  0x72 -> 'ニ',
  0x73 -> 'ヌ',
  0x74 -> 'ネ',
  0x75 -> 'ノ',
  0x76 -> 'ハ',
  0x77 -> 'ヒ',
  0x78 -> 'フ',
  0x79 -> 'ヘ',
  0x7A -> 'ホ',
  0x7B -> 'マ',
  0x7C -> 'ミ',
  0x7D -> 'ム',
  0x7E -> 'メ',
  0x7F -> 'モ',
  0x80 -> 'ヤ',
  0x81 -> 'ユ',
  0x82 -> 'ヨ',
  0x83 -> 'ラ',
  0x84 -> 'リ',
  0x85 -> 'ル',
  0x86 -> 'レ',
  0x87 -> 'ロ',
  0x88 -> 'ワ',
  0x89 -> 'ヲ',
  0x8A -> 'ン',
  0x8B -> 'ァ',
  0x8C -> 'ィ',
  0x8D -> 'ェ',
  0x8E -> 'ォ',
  0x8F -> 'ャ',
  0x90 -> 'ュ',
  0x91 -> 'ョ',
  0x92 -> 'ッ',
  0x93 -> '・',
  0x94 -> '！',
  0x95 -> '？',
  0x96 -> '＆',
  0x97 -> '＞',
  0x98 -> '／',
  0x99 -> '＇',
  0x9A -> '：',
  0x9B -> '．',
  0x9C -> 'が',
  0x9D -> 'ぎ',
  0x9E -> 'ぐ',
  0x9F -> 'げ',
  0xA0 -> 'ご',
  0xA1 -> 'ざ',
  0xA2 -> 'じ',
  0xA3 -> 'ず',
  0xA4 -> 'ぜ',
  0xA5 -> 'ぞ',
  0xA6 -> 'だ',
  0xA7 -> 'ぢ',
  0xA8 -> 'づ',
  0xA9 -> 'で',
  0xAA -> 'ど',
  0xAB -> 'ば',
  0xAC -> 'び',
  0xAD -> 'ぶ',
  0xAE -> 'べ',
  0xAF -> 'ぼ',
  0xB0 -> 'ぱ',
  0xB1 -> 'ぴ',
  0xB2 -> 'ぷ',
  0xB3 -> 'ぺ',
  0xB4 -> 'ぽ',
  0xB5 -> 'ガ',
  0xB6 -> 'ギ',
  0xB7 -> 'グ',
  0xB8 -> 'ゲ',
  0xB9 -> 'ゴ',
  0xBA -> 'ザ',
  0xBB -> 'ジ',
  0xBC -> 'ズ',
  0xBD -> 'ゼ',
  0xBE -> 'ゾ',
  0xBF -> 'ダ',
  0xC0 -> 'ヂ',
  0xC1 -> 'ヅ',
  0xC2 -> 'デ',
  0xC3 -> 'ド',
  0xC4 -> 'バ',
  0xC5 -> 'ビ',
  0xC6 -> 'ブ',
  0xC7 -> 'べ',
  0xC8 -> 'ボ',
  0xC9 -> 'パ',
  0xCA -> 'ピ',
  0xCB -> 'プ',
  0xCC -> 'ペ',
  0xCD -> 'ポ',
  0xCE -> 'ヴ',
  0xCF -> '　',
)

val NORMALIZED_REVERSE_MAPPING = MAPPING.map { case (k, v) => (SmtChar.normalizeChar(v), k) }

sealed case class SmtChar(code: Int) {
  require(MAPPING.contains(code))

  def toChar(): Char = MAPPING(code)
  def toHexString(): String = code.toHexString
}

object SmtChar {
  def fromInt(int: Int): Option[SmtChar] = try { Some(SmtChar(int)) } catch { case _ => None }

  def fromByte(byte: Byte): Option[SmtChar] = SmtChar.fromInt(byte.toInt & 0xFF)

  def decodeHexString(hex: String): Option[SmtChar] = SmtChar.fromInt(Integer.parseInt(hex, 16))

  def normalizeChar(char: Char): Char = Normalizer.normalize(char.toString, Normalizer.Form.NFKC).toCharArray.head.toUpper

  def fromChar(char: Char): Option[SmtChar] = NORMALIZED_REVERSE_MAPPING.get(normalizeChar(char)).map(SmtChar(_))
}
